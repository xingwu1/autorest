/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 * 
 * Code generated by Microsoft (R) AutoRest Code Generator 0.13.0.0
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
*/

import { ServiceClientOptions, RequestOptions, ServiceCallback } from 'ms-rest';
import * as moment from 'moment';
import * as models from '../models';


/**
 * @class
 * Dictionary
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the AutoRestSwaggerBATdictionaryService.
 */
export interface Dictionary {

    /**
     * Get null dictionary value
     *
     * @param {object} [options]
     *
     * @param {object} [options.customHeaders] headers that will be added to
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    getNull(options: RequestOptions, callback: ServiceCallback<{ [propertyName: string]: number }>): void;
    getNull(callback: ServiceCallback<{ [propertyName: string]: number }>): void;

    /**
     * Get empty dictionary value {}
     *
     * @param {object} [options]
     *
     * @param {object} [options.customHeaders] headers that will be added to
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    getEmpty(options: RequestOptions, callback: ServiceCallback<{ [propertyName: string]: number }>): void;
    getEmpty(callback: ServiceCallback<{ [propertyName: string]: number }>): void;

    /**
     * Set dictionary value empty {}
     *
     * @param {object} arrayBody
     * 
     * @param {object} [options]
     *
     * @param {object} [options.customHeaders] headers that will be added to
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    putEmpty(arrayBody: { [propertyName: string]: string }, options: RequestOptions, callback: ServiceCallback<void>): void;
    putEmpty(arrayBody: { [propertyName: string]: string }, callback: ServiceCallback<void>): void;

    /**
     * Get Dictionary with null value
     *
     * @param {object} [options]
     *
     * @param {object} [options.customHeaders] headers that will be added to
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    getNullValue(options: RequestOptions, callback: ServiceCallback<{ [propertyName: string]: string }>): void;
    getNullValue(callback: ServiceCallback<{ [propertyName: string]: string }>): void;

    /**
     * Get Dictionary with null key
     *
     * @param {object} [options]
     *
     * @param {object} [options.customHeaders] headers that will be added to
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    getNullKey(options: RequestOptions, callback: ServiceCallback<{ [propertyName: string]: string }>): void;
    getNullKey(callback: ServiceCallback<{ [propertyName: string]: string }>): void;

    /**
     * Get Dictionary with key as empty string
     *
     * @param {object} [options]
     *
     * @param {object} [options.customHeaders] headers that will be added to
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    getEmptyStringKey(options: RequestOptions, callback: ServiceCallback<{ [propertyName: string]: string }>): void;
    getEmptyStringKey(callback: ServiceCallback<{ [propertyName: string]: string }>): void;

    /**
     * Get invalid Dictionary value
     *
     * @param {object} [options]
     *
     * @param {object} [options.customHeaders] headers that will be added to
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    getInvalid(options: RequestOptions, callback: ServiceCallback<{ [propertyName: string]: string }>): void;
    getInvalid(callback: ServiceCallback<{ [propertyName: string]: string }>): void;

    /**
     * Get boolean dictionary value {"0": true, "1": false, "2": false, "3": true }
     *
     * @param {object} [options]
     *
     * @param {object} [options.customHeaders] headers that will be added to
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    getBooleanTfft(options: RequestOptions, callback: ServiceCallback<{ [propertyName: string]: boolean }>): void;
    getBooleanTfft(callback: ServiceCallback<{ [propertyName: string]: boolean }>): void;

    /**
     * Set dictionary value empty {"0": true, "1": false, "2": false, "3": true }
     *
     * @param {object} arrayBody
     * 
     * @param {object} [options]
     *
     * @param {object} [options.customHeaders] headers that will be added to
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    putBooleanTfft(arrayBody: { [propertyName: string]: boolean }, options: RequestOptions, callback: ServiceCallback<void>): void;
    putBooleanTfft(arrayBody: { [propertyName: string]: boolean }, callback: ServiceCallback<void>): void;

    /**
     * Get boolean dictionary value {"0": true, "1": null, "2": false }
     *
     * @param {object} [options]
     *
     * @param {object} [options.customHeaders] headers that will be added to
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    getBooleanInvalidNull(options: RequestOptions, callback: ServiceCallback<{ [propertyName: string]: boolean }>): void;
    getBooleanInvalidNull(callback: ServiceCallback<{ [propertyName: string]: boolean }>): void;

    /**
     * Get boolean dictionary value '{"0": true, "1": "boolean", "2": false}'
     *
     * @param {object} [options]
     *
     * @param {object} [options.customHeaders] headers that will be added to
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    getBooleanInvalidString(options: RequestOptions, callback: ServiceCallback<{ [propertyName: string]: boolean }>): void;
    getBooleanInvalidString(callback: ServiceCallback<{ [propertyName: string]: boolean }>): void;

    /**
     * Get integer dictionary value {"0": 1, "1": -1, "2": 3, "3": 300}
     *
     * @param {object} [options]
     *
     * @param {object} [options.customHeaders] headers that will be added to
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    getIntegerValid(options: RequestOptions, callback: ServiceCallback<{ [propertyName: string]: number }>): void;
    getIntegerValid(callback: ServiceCallback<{ [propertyName: string]: number }>): void;

    /**
     * Set dictionary value empty {"0": 1, "1": -1, "2": 3, "3": 300}
     *
     * @param {object} arrayBody
     * 
     * @param {object} [options]
     *
     * @param {object} [options.customHeaders] headers that will be added to
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    putIntegerValid(arrayBody: { [propertyName: string]: number }, options: RequestOptions, callback: ServiceCallback<void>): void;
    putIntegerValid(arrayBody: { [propertyName: string]: number }, callback: ServiceCallback<void>): void;

    /**
     * Get integer dictionary value {"0": 1, "1": null, "2": 0}
     *
     * @param {object} [options]
     *
     * @param {object} [options.customHeaders] headers that will be added to
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    getIntInvalidNull(options: RequestOptions, callback: ServiceCallback<{ [propertyName: string]: number }>): void;
    getIntInvalidNull(callback: ServiceCallback<{ [propertyName: string]: number }>): void;

    /**
     * Get integer dictionary value {"0": 1, "1": "integer", "2": 0}
     *
     * @param {object} [options]
     *
     * @param {object} [options.customHeaders] headers that will be added to
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    getIntInvalidString(options: RequestOptions, callback: ServiceCallback<{ [propertyName: string]: number }>): void;
    getIntInvalidString(callback: ServiceCallback<{ [propertyName: string]: number }>): void;

    /**
     * Get integer dictionary value {"0": 1, "1": -1, "2": 3, "3": 300}
     *
     * @param {object} [options]
     *
     * @param {object} [options.customHeaders] headers that will be added to
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    getLongValid(options: RequestOptions, callback: ServiceCallback<{ [propertyName: string]: number }>): void;
    getLongValid(callback: ServiceCallback<{ [propertyName: string]: number }>): void;

    /**
     * Set dictionary value empty {"0": 1, "1": -1, "2": 3, "3": 300}
     *
     * @param {object} arrayBody
     * 
     * @param {object} [options]
     *
     * @param {object} [options.customHeaders] headers that will be added to
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    putLongValid(arrayBody: { [propertyName: string]: number }, options: RequestOptions, callback: ServiceCallback<void>): void;
    putLongValid(arrayBody: { [propertyName: string]: number }, callback: ServiceCallback<void>): void;

    /**
     * Get long dictionary value {"0": 1, "1": null, "2": 0}
     *
     * @param {object} [options]
     *
     * @param {object} [options.customHeaders] headers that will be added to
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    getLongInvalidNull(options: RequestOptions, callback: ServiceCallback<{ [propertyName: string]: number }>): void;
    getLongInvalidNull(callback: ServiceCallback<{ [propertyName: string]: number }>): void;

    /**
     * Get long dictionary value {"0": 1, "1": "integer", "2": 0}
     *
     * @param {object} [options]
     *
     * @param {object} [options.customHeaders] headers that will be added to
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    getLongInvalidString(options: RequestOptions, callback: ServiceCallback<{ [propertyName: string]: number }>): void;
    getLongInvalidString(callback: ServiceCallback<{ [propertyName: string]: number }>): void;

    /**
     * Get float dictionary value {"0": 0, "1": -0.01, "2": 1.2e20}
     *
     * @param {object} [options]
     *
     * @param {object} [options.customHeaders] headers that will be added to
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    getFloatValid(options: RequestOptions, callback: ServiceCallback<{ [propertyName: string]: number }>): void;
    getFloatValid(callback: ServiceCallback<{ [propertyName: string]: number }>): void;

    /**
     * Set dictionary value {"0": 0, "1": -0.01, "2": 1.2e20}
     *
     * @param {object} arrayBody
     * 
     * @param {object} [options]
     *
     * @param {object} [options.customHeaders] headers that will be added to
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    putFloatValid(arrayBody: { [propertyName: string]: number }, options: RequestOptions, callback: ServiceCallback<void>): void;
    putFloatValid(arrayBody: { [propertyName: string]: number }, callback: ServiceCallback<void>): void;

    /**
     * Get float dictionary value {"0": 0.0, "1": null, "2": 1.2e20}
     *
     * @param {object} [options]
     *
     * @param {object} [options.customHeaders] headers that will be added to
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    getFloatInvalidNull(options: RequestOptions, callback: ServiceCallback<{ [propertyName: string]: number }>): void;
    getFloatInvalidNull(callback: ServiceCallback<{ [propertyName: string]: number }>): void;

    /**
     * Get boolean dictionary value {"0": 1.0, "1": "number", "2": 0.0}
     *
     * @param {object} [options]
     *
     * @param {object} [options.customHeaders] headers that will be added to
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    getFloatInvalidString(options: RequestOptions, callback: ServiceCallback<{ [propertyName: string]: number }>): void;
    getFloatInvalidString(callback: ServiceCallback<{ [propertyName: string]: number }>): void;

    /**
     * Get float dictionary value {"0": 0, "1": -0.01, "2": 1.2e20}
     *
     * @param {object} [options]
     *
     * @param {object} [options.customHeaders] headers that will be added to
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    getDoubleValid(options: RequestOptions, callback: ServiceCallback<{ [propertyName: string]: number }>): void;
    getDoubleValid(callback: ServiceCallback<{ [propertyName: string]: number }>): void;

    /**
     * Set dictionary value {"0": 0, "1": -0.01, "2": 1.2e20}
     *
     * @param {object} arrayBody
     * 
     * @param {object} [options]
     *
     * @param {object} [options.customHeaders] headers that will be added to
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    putDoubleValid(arrayBody: { [propertyName: string]: number }, options: RequestOptions, callback: ServiceCallback<void>): void;
    putDoubleValid(arrayBody: { [propertyName: string]: number }, callback: ServiceCallback<void>): void;

    /**
     * Get float dictionary value {"0": 0.0, "1": null, "2": 1.2e20}
     *
     * @param {object} [options]
     *
     * @param {object} [options.customHeaders] headers that will be added to
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    getDoubleInvalidNull(options: RequestOptions, callback: ServiceCallback<{ [propertyName: string]: number }>): void;
    getDoubleInvalidNull(callback: ServiceCallback<{ [propertyName: string]: number }>): void;

    /**
     * Get boolean dictionary value {"0": 1.0, "1": "number", "2": 0.0}
     *
     * @param {object} [options]
     *
     * @param {object} [options.customHeaders] headers that will be added to
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    getDoubleInvalidString(options: RequestOptions, callback: ServiceCallback<{ [propertyName: string]: number }>): void;
    getDoubleInvalidString(callback: ServiceCallback<{ [propertyName: string]: number }>): void;

    /**
     * Get string dictionary value {"0": "foo1", "1": "foo2", "2": "foo3"}
     *
     * @param {object} [options]
     *
     * @param {object} [options.customHeaders] headers that will be added to
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    getStringValid(options: RequestOptions, callback: ServiceCallback<{ [propertyName: string]: string }>): void;
    getStringValid(callback: ServiceCallback<{ [propertyName: string]: string }>): void;

    /**
     * Set dictionary value {"0": "foo1", "1": "foo2", "2": "foo3"}
     *
     * @param {object} arrayBody
     * 
     * @param {object} [options]
     *
     * @param {object} [options.customHeaders] headers that will be added to
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    putStringValid(arrayBody: { [propertyName: string]: string }, options: RequestOptions, callback: ServiceCallback<void>): void;
    putStringValid(arrayBody: { [propertyName: string]: string }, callback: ServiceCallback<void>): void;

    /**
     * Get string dictionary value {"0": "foo", "1": null, "2": "foo2"}
     *
     * @param {object} [options]
     *
     * @param {object} [options.customHeaders] headers that will be added to
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    getStringWithNull(options: RequestOptions, callback: ServiceCallback<{ [propertyName: string]: string }>): void;
    getStringWithNull(callback: ServiceCallback<{ [propertyName: string]: string }>): void;

    /**
     * Get string dictionary value {"0": "foo", "1": 123, "2": "foo2"}
     *
     * @param {object} [options]
     *
     * @param {object} [options.customHeaders] headers that will be added to
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    getStringWithInvalid(options: RequestOptions, callback: ServiceCallback<{ [propertyName: string]: string }>): void;
    getStringWithInvalid(callback: ServiceCallback<{ [propertyName: string]: string }>): void;

    /**
     * Get integer dictionary value {"0": "2000-12-01", "1": "1980-01-02", "2":
     * "1492-10-12"}
     *
     * @param {object} [options]
     *
     * @param {object} [options.customHeaders] headers that will be added to
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    getDateValid(options: RequestOptions, callback: ServiceCallback<{ [propertyName: string]: Date }>): void;
    getDateValid(callback: ServiceCallback<{ [propertyName: string]: Date }>): void;

    /**
     * Set dictionary value  {"0": "2000-12-01", "1": "1980-01-02", "2":
     * "1492-10-12"}
     *
     * @param {object} arrayBody
     * 
     * @param {object} [options]
     *
     * @param {object} [options.customHeaders] headers that will be added to
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    putDateValid(arrayBody: { [propertyName: string]: Date }, options: RequestOptions, callback: ServiceCallback<void>): void;
    putDateValid(arrayBody: { [propertyName: string]: Date }, callback: ServiceCallback<void>): void;

    /**
     * Get date dictionary value {"0": "2012-01-01", "1": null, "2": "1776-07-04"}
     *
     * @param {object} [options]
     *
     * @param {object} [options.customHeaders] headers that will be added to
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    getDateInvalidNull(options: RequestOptions, callback: ServiceCallback<{ [propertyName: string]: Date }>): void;
    getDateInvalidNull(callback: ServiceCallback<{ [propertyName: string]: Date }>): void;

    /**
     * Get date dictionary value {"0": "2011-03-22", "1": "date"}
     *
     * @param {object} [options]
     *
     * @param {object} [options.customHeaders] headers that will be added to
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    getDateInvalidChars(options: RequestOptions, callback: ServiceCallback<{ [propertyName: string]: Date }>): void;
    getDateInvalidChars(callback: ServiceCallback<{ [propertyName: string]: Date }>): void;

    /**
     * Get date-time dictionary value {"0": "2000-12-01t00:00:01z", "1":
     * "1980-01-02T00:11:35+01:00", "2": "1492-10-12T10:15:01-08:00"}
     *
     * @param {object} [options]
     *
     * @param {object} [options.customHeaders] headers that will be added to
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    getDateTimeValid(options: RequestOptions, callback: ServiceCallback<{ [propertyName: string]: Date }>): void;
    getDateTimeValid(callback: ServiceCallback<{ [propertyName: string]: Date }>): void;

    /**
     * Set dictionary value  {"0": "2000-12-01t00:00:01z", "1":
     * "1980-01-02T00:11:35+01:00", "2": "1492-10-12T10:15:01-08:00"}
     *
     * @param {object} arrayBody
     * 
     * @param {object} [options]
     *
     * @param {object} [options.customHeaders] headers that will be added to
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    putDateTimeValid(arrayBody: { [propertyName: string]: Date }, options: RequestOptions, callback: ServiceCallback<void>): void;
    putDateTimeValid(arrayBody: { [propertyName: string]: Date }, callback: ServiceCallback<void>): void;

    /**
     * Get date dictionary value {"0": "2000-12-01t00:00:01z", "1": null}
     *
     * @param {object} [options]
     *
     * @param {object} [options.customHeaders] headers that will be added to
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    getDateTimeInvalidNull(options: RequestOptions, callback: ServiceCallback<{ [propertyName: string]: Date }>): void;
    getDateTimeInvalidNull(callback: ServiceCallback<{ [propertyName: string]: Date }>): void;

    /**
     * Get date dictionary value {"0": "2000-12-01t00:00:01z", "1": "date-time"}
     *
     * @param {object} [options]
     *
     * @param {object} [options.customHeaders] headers that will be added to
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    getDateTimeInvalidChars(options: RequestOptions, callback: ServiceCallback<{ [propertyName: string]: Date }>): void;
    getDateTimeInvalidChars(callback: ServiceCallback<{ [propertyName: string]: Date }>): void;

    /**
     * Get date-time-rfc1123 dictionary value {"0": "Fri, 01 Dec 2000 00:00:01
     * GMT", "1": "Wed, 02 Jan 1980 00:11:35 GMT", "2": "Wed, 12 Oct 1492
     * 10:15:01 GMT"}
     *
     * @param {object} [options]
     *
     * @param {object} [options.customHeaders] headers that will be added to
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    getDateTimeRfc1123Valid(options: RequestOptions, callback: ServiceCallback<{ [propertyName: string]: Date }>): void;
    getDateTimeRfc1123Valid(callback: ServiceCallback<{ [propertyName: string]: Date }>): void;

    /**
     * Set dictionary value empty {"0": "Fri, 01 Dec 2000 00:00:01 GMT", "1":
     * "Wed, 02 Jan 1980 00:11:35 GMT", "2": "Wed, 12 Oct 1492 10:15:01 GMT"}
     *
     * @param {object} arrayBody
     * 
     * @param {object} [options]
     *
     * @param {object} [options.customHeaders] headers that will be added to
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    putDateTimeRfc1123Valid(arrayBody: { [propertyName: string]: Date }, options: RequestOptions, callback: ServiceCallback<void>): void;
    putDateTimeRfc1123Valid(arrayBody: { [propertyName: string]: Date }, callback: ServiceCallback<void>): void;

    /**
     * Get duration dictionary value {"0": "P123DT22H14M12.011S", "1":
     * "P5DT1H0M0S"}
     *
     * @param {object} [options]
     *
     * @param {object} [options.customHeaders] headers that will be added to
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    getDurationValid(options: RequestOptions, callback: ServiceCallback<{ [propertyName: string]: moment.Duration }>): void;
    getDurationValid(callback: ServiceCallback<{ [propertyName: string]: moment.Duration }>): void;

    /**
     * Set dictionary value  {"0": "P123DT22H14M12.011S", "1": "P5DT1H0M0S"}
     *
     * @param {object} arrayBody
     * 
     * @param {object} [options]
     *
     * @param {object} [options.customHeaders] headers that will be added to
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    putDurationValid(arrayBody: { [propertyName: string]: moment.Duration }, options: RequestOptions, callback: ServiceCallback<void>): void;
    putDurationValid(arrayBody: { [propertyName: string]: moment.Duration }, callback: ServiceCallback<void>): void;

    /**
     * Get byte dictionary value {"0": hex(FF FF FF FA), "1": hex(01 02 03), "2":
     * hex (25, 29, 43)} with each item encoded in base64
     *
     * @param {object} [options]
     *
     * @param {object} [options.customHeaders] headers that will be added to
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    getByteValid(options: RequestOptions, callback: ServiceCallback<{ [propertyName: string]: Buffer }>): void;
    getByteValid(callback: ServiceCallback<{ [propertyName: string]: Buffer }>): void;

    /**
     * Put the dictionary value {"0": hex(FF FF FF FA), "1": hex(01 02 03), "2":
     * hex (25, 29, 43)} with each elementencoded in base 64
     *
     * @param {object} arrayBody
     * 
     * @param {object} [options]
     *
     * @param {object} [options.customHeaders] headers that will be added to
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    putByteValid(arrayBody: { [propertyName: string]: Buffer }, options: RequestOptions, callback: ServiceCallback<void>): void;
    putByteValid(arrayBody: { [propertyName: string]: Buffer }, callback: ServiceCallback<void>): void;

    /**
     * Get byte dictionary value {"0": hex(FF FF FF FA), "1": null} with the first
     * item base64 encoded
     *
     * @param {object} [options]
     *
     * @param {object} [options.customHeaders] headers that will be added to
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    getByteInvalidNull(options: RequestOptions, callback: ServiceCallback<{ [propertyName: string]: Buffer }>): void;
    getByteInvalidNull(callback: ServiceCallback<{ [propertyName: string]: Buffer }>): void;

    /**
     * Get dictionary of complex type null value
     *
     * @param {object} [options]
     *
     * @param {object} [options.customHeaders] headers that will be added to
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    getComplexNull(options: RequestOptions, callback: ServiceCallback<{ [propertyName: string]: models.Widget }>): void;
    getComplexNull(callback: ServiceCallback<{ [propertyName: string]: models.Widget }>): void;

    /**
     * Get empty dictionary of complex type {}
     *
     * @param {object} [options]
     *
     * @param {object} [options.customHeaders] headers that will be added to
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    getComplexEmpty(options: RequestOptions, callback: ServiceCallback<{ [propertyName: string]: models.Widget }>): void;
    getComplexEmpty(callback: ServiceCallback<{ [propertyName: string]: models.Widget }>): void;

    /**
     * Get dictionary of complex type with null item {"0": {"integer": 1,
     * "string": "2"}, "1": null, "2": {"integer": 5, "string": "6"}}
     *
     * @param {object} [options]
     *
     * @param {object} [options.customHeaders] headers that will be added to
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    getComplexItemNull(options: RequestOptions, callback: ServiceCallback<{ [propertyName: string]: models.Widget }>): void;
    getComplexItemNull(callback: ServiceCallback<{ [propertyName: string]: models.Widget }>): void;

    /**
     * Get dictionary of complex type with empty item {"0": {"integer": 1,
     * "string": "2"}, "1:" {}, "2": {"integer": 5, "string": "6"}}
     *
     * @param {object} [options]
     *
     * @param {object} [options.customHeaders] headers that will be added to
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    getComplexItemEmpty(options: RequestOptions, callback: ServiceCallback<{ [propertyName: string]: models.Widget }>): void;
    getComplexItemEmpty(callback: ServiceCallback<{ [propertyName: string]: models.Widget }>): void;

    /**
     * Get dictionary of complex type with {"0": {"integer": 1, "string": "2"},
     * "1": {"integer": 3, "string": "4"}, "2": {"integer": 5, "string": "6"}}
     *
     * @param {object} [options]
     *
     * @param {object} [options.customHeaders] headers that will be added to
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    getComplexValid(options: RequestOptions, callback: ServiceCallback<{ [propertyName: string]: models.Widget }>): void;
    getComplexValid(callback: ServiceCallback<{ [propertyName: string]: models.Widget }>): void;

    /**
     * Put an dictionary of complex type with values {"0": {"integer": 1,
     * "string": "2"}, "1": {"integer": 3, "string": "4"}, "2": {"integer": 5,
     * "string": "6"}}
     *
     * @param {object} arrayBody
     * 
     * @param {object} [options]
     *
     * @param {object} [options.customHeaders] headers that will be added to
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    putComplexValid(arrayBody: { [propertyName: string]: models.Widget }, options: RequestOptions, callback: ServiceCallback<void>): void;
    putComplexValid(arrayBody: { [propertyName: string]: models.Widget }, callback: ServiceCallback<void>): void;

    /**
     * Get a null array
     *
     * @param {object} [options]
     *
     * @param {object} [options.customHeaders] headers that will be added to
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    getArrayNull(options: RequestOptions, callback: ServiceCallback<{ [propertyName: string]: string[] }>): void;
    getArrayNull(callback: ServiceCallback<{ [propertyName: string]: string[] }>): void;

    /**
     * Get an empty dictionary {}
     *
     * @param {object} [options]
     *
     * @param {object} [options.customHeaders] headers that will be added to
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    getArrayEmpty(options: RequestOptions, callback: ServiceCallback<{ [propertyName: string]: string[] }>): void;
    getArrayEmpty(callback: ServiceCallback<{ [propertyName: string]: string[] }>): void;

    /**
     * Get an dictionary of array of strings {"0": ["1", "2", "3"], "1": null,
     * "2": ["7", "8", "9"]}
     *
     * @param {object} [options]
     *
     * @param {object} [options.customHeaders] headers that will be added to
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    getArrayItemNull(options: RequestOptions, callback: ServiceCallback<{ [propertyName: string]: string[] }>): void;
    getArrayItemNull(callback: ServiceCallback<{ [propertyName: string]: string[] }>): void;

    /**
     * Get an array of array of strings [{"0": ["1", "2", "3"], "1": [], "2":
     * ["7", "8", "9"]}
     *
     * @param {object} [options]
     *
     * @param {object} [options.customHeaders] headers that will be added to
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    getArrayItemEmpty(options: RequestOptions, callback: ServiceCallback<{ [propertyName: string]: string[] }>): void;
    getArrayItemEmpty(callback: ServiceCallback<{ [propertyName: string]: string[] }>): void;

    /**
     * Get an array of array of strings {"0": ["1", "2", "3"], "1": ["4", "5",
     * "6"], "2": ["7", "8", "9"]}
     *
     * @param {object} [options]
     *
     * @param {object} [options.customHeaders] headers that will be added to
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    getArrayValid(options: RequestOptions, callback: ServiceCallback<{ [propertyName: string]: string[] }>): void;
    getArrayValid(callback: ServiceCallback<{ [propertyName: string]: string[] }>): void;

    /**
     * Put An array of array of strings {"0": ["1", "2", "3"], "1": ["4", "5",
     * "6"], "2": ["7", "8", "9"]}
     *
     * @param {object} arrayBody
     * 
     * @param {object} [options]
     *
     * @param {object} [options.customHeaders] headers that will be added to
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    putArrayValid(arrayBody: { [propertyName: string]: string[] }, options: RequestOptions, callback: ServiceCallback<void>): void;
    putArrayValid(arrayBody: { [propertyName: string]: string[] }, callback: ServiceCallback<void>): void;

    /**
     * Get an dictionaries of dictionaries with value null
     *
     * @param {object} [options]
     *
     * @param {object} [options.customHeaders] headers that will be added to
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    getDictionaryNull(options: RequestOptions, callback: ServiceCallback<{ [propertyName: string]: { [propertyName: string]: string } }>): void;
    getDictionaryNull(callback: ServiceCallback<{ [propertyName: string]: { [propertyName: string]: string } }>): void;

    /**
     * Get an dictionaries of dictionaries of type <string, string> with value {}
     *
     * @param {object} [options]
     *
     * @param {object} [options.customHeaders] headers that will be added to
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    getDictionaryEmpty(options: RequestOptions, callback: ServiceCallback<{ [propertyName: string]: { [propertyName: string]: string } }>): void;
    getDictionaryEmpty(callback: ServiceCallback<{ [propertyName: string]: { [propertyName: string]: string } }>): void;

    /**
     * Get an dictionaries of dictionaries of type <string, string> with value
     * {"0": {"1": "one", "2": "two", "3": "three"}, "1": null, "2": {"7":
     * "seven", "8": "eight", "9": "nine"}}
     *
     * @param {object} [options]
     *
     * @param {object} [options.customHeaders] headers that will be added to
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    getDictionaryItemNull(options: RequestOptions, callback: ServiceCallback<{ [propertyName: string]: { [propertyName: string]: string } }>): void;
    getDictionaryItemNull(callback: ServiceCallback<{ [propertyName: string]: { [propertyName: string]: string } }>): void;

    /**
     * Get an dictionaries of dictionaries of type <string, string> with value
     * {"0": {"1": "one", "2": "two", "3": "three"}, "1": {}, "2": {"7": "seven",
     * "8": "eight", "9": "nine"}}
     *
     * @param {object} [options]
     *
     * @param {object} [options.customHeaders] headers that will be added to
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    getDictionaryItemEmpty(options: RequestOptions, callback: ServiceCallback<{ [propertyName: string]: { [propertyName: string]: string } }>): void;
    getDictionaryItemEmpty(callback: ServiceCallback<{ [propertyName: string]: { [propertyName: string]: string } }>): void;

    /**
     * Get an dictionaries of dictionaries of type <string, string> with value
     * {"0": {"1": "one", "2": "two", "3": "three"}, "1": {"4": "four", "5":
     * "five", "6": "six"}, "2": {"7": "seven", "8": "eight", "9": "nine"}}
     *
     * @param {object} [options]
     *
     * @param {object} [options.customHeaders] headers that will be added to
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    getDictionaryValid(options: RequestOptions, callback: ServiceCallback<{ [propertyName: string]: { [propertyName: string]: string } }>): void;
    getDictionaryValid(callback: ServiceCallback<{ [propertyName: string]: { [propertyName: string]: string } }>): void;

    /**
     * Get an dictionaries of dictionaries of type <string, string> with value
     * {"0": {"1": "one", "2": "two", "3": "three"}, "1": {"4": "four", "5":
     * "five", "6": "six"}, "2": {"7": "seven", "8": "eight", "9": "nine"}}
     *
     * @param {object} arrayBody
     * 
     * @param {object} [options]
     *
     * @param {object} [options.customHeaders] headers that will be added to
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    putDictionaryValid(arrayBody: { [propertyName: string]: { [propertyName: string]: string } }, options: RequestOptions, callback: ServiceCallback<void>): void;
    putDictionaryValid(arrayBody: { [propertyName: string]: { [propertyName: string]: string } }, callback: ServiceCallback<void>): void;
}
