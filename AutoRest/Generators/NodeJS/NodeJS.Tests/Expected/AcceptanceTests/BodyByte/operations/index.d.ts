/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 * 
 * Code generated by Microsoft (R) AutoRest Code Generator 0.13.0.0
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
*/

import { ServiceClientOptions, RequestOptions, ServiceCallback } from 'ms-rest';
import * as models from '../models';


/**
 * @class
 * ByteModel
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the AutoRestSwaggerBATByteService.
 */
export interface ByteModel {

    /**
     * Get null byte value
     *
     * @param {object} [options]
     *
     * @param {object} [options.customHeaders] headers that will be added to
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    getNull(options: RequestOptions, callback: ServiceCallback<Buffer>): void;
    getNull(callback: ServiceCallback<Buffer>): void;

    /**
     * Get empty byte value ''
     *
     * @param {object} [options]
     *
     * @param {object} [options.customHeaders] headers that will be added to
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    getEmpty(options: RequestOptions, callback: ServiceCallback<Buffer>): void;
    getEmpty(callback: ServiceCallback<Buffer>): void;

    /**
     * Get non-ascii byte string hex(FF FE FD FC FB FA F9 F8 F7 F6)
     *
     * @param {object} [options]
     *
     * @param {object} [options.customHeaders] headers that will be added to
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    getNonAscii(options: RequestOptions, callback: ServiceCallback<Buffer>): void;
    getNonAscii(callback: ServiceCallback<Buffer>): void;

    /**
     * Put non-ascii byte string hex(FF FE FD FC FB FA F9 F8 F7 F6)
     *
     * @param {buffer} byteBody Base64-encoded non-ascii byte string hex(FF FE FD
     * FC FB FA F9 F8 F7 F6)
     * 
     * @param {object} [options]
     *
     * @param {object} [options.customHeaders] headers that will be added to
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    putNonAscii(byteBody: Buffer, options: RequestOptions, callback: ServiceCallback<void>): void;
    putNonAscii(byteBody: Buffer, callback: ServiceCallback<void>): void;

    /**
     * Get invalid byte value ':::SWAGGER::::'
     *
     * @param {object} [options]
     *
     * @param {object} [options.customHeaders] headers that will be added to
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    getInvalid(options: RequestOptions, callback: ServiceCallback<Buffer>): void;
    getInvalid(callback: ServiceCallback<Buffer>): void;
}
