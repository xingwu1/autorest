/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 * 
 * Code generated by Microsoft (R) AutoRest Code Generator 0.13.0.0
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

var models = require('./index');

var util = require('util');

/**
 * @class
 * Initializes a new instance of the SubProduct class.
 * @constructor
 * @member {string} [provisioningState]
 * 
 * @member {string} [provisioningStateValues] Possible values for this
 * property include: 'Succeeded', 'Failed', 'canceled', 'Accepted',
 * 'Creating', 'Created', 'Updating', 'Updated', 'Deleting', 'Deleted', 'OK'.
 * 
 */
function SubProduct(parameters) {
  SubProduct['super_'].call(this, parameters);
  if (parameters !== null && parameters !== undefined) {
    if (parameters.provisioningState !== undefined) {
      this.provisioningState = parameters.provisioningState;
    }
    if (parameters.provisioningStateValues !== undefined) {
      this.provisioningStateValues = parameters.provisioningStateValues;
    }
  }    
}

util.inherits(SubProduct, models['SubResource']);

/**
 * Validate the payload against the SubProduct schema
 *
 * @param {JSON} payload
 *
 */
SubProduct.prototype.serialize = function () {
  var payload = SubProduct['super_'].prototype.serialize.call(this);
  if (this['provisioningState'] !== null && this['provisioningState'] !== undefined) {
    if (typeof this['provisioningState'].valueOf() !== 'string') {
      throw new Error('this[\'provisioningState\'] must be of type string.');
    }
    if (payload['properties'] === null || payload['properties'] === undefined) {
      payload['properties'] = {};
    }
    payload['properties']['provisioningState'] = this['provisioningState'];
  }

  if (this['provisioningStateValues'] !== null && this['provisioningStateValues'] !== undefined) {
    if (typeof this['provisioningStateValues'].valueOf() !== 'string') {
      throw new Error('this[\'provisioningStateValues\'] must be of type string.');
    }
    if (payload['properties'] === null || payload['properties'] === undefined) {
      payload['properties'] = {};
    }
    payload['properties']['provisioningStateValues'] = this['provisioningStateValues'];
  }

  return payload;
};

/**
 * Deserialize the instance to SubProduct schema
 *
 * @param {JSON} instance
 *
 */
SubProduct.prototype.deserialize = function (instance) {
  SubProduct['super_'].prototype.deserialize.call(this, instance);
  if (instance) {
    if (instance['properties'] !== null && instance['properties'] !== undefined) {
      if (instance['properties']['provisioningState'] !== undefined) {
        this['provisioningState'] = instance['properties']['provisioningState'];
      }
    }

    if (instance['properties'] !== null && instance['properties'] !== undefined) {
      if (instance['properties']['provisioningStateValues'] !== undefined) {
        this['provisioningStateValues'] = instance['properties']['provisioningStateValues'];
      }
    }
  }

  return this;
};

module.exports = SubProduct;
